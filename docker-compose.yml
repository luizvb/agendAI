version: "3.8"

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: barber-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=barber
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - barber-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    container_name: barber-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    networks:
      - barber-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./barber-backend
      dockerfile: Dockerfile
    container_name: barber-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=barber
      - RABBITMQ_URL=amqp://user:password@rabbitmq:5672
      - PORT=3001
    volumes:
      - ./barber-backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - barber-network

  # WhatsApp Service
  whatsapp:
    build:
      context: ./whatsapp-service
      dockerfile: Dockerfile
    container_name: barber-whatsapp
    environment:
      - RABBITMQ_URL=amqp://user:password@rabbitmq:5672
    volumes:
      - whatsapp_sessions:/app/.wwebjs_auth
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - barber-network

networks:
  barber-network:
    driver: bridge

volumes:
  postgres_data:
  whatsapp_sessions:
